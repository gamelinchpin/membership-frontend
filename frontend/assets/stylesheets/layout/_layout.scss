/* ==========================================================================
   Layout
   ========================================================================== */

html {
    position: relative;
    min-height: 100%;
    background-color: $c-background;

    background-attachment: fixed;
    background-repeat: repeat-y;
    background-position: center;
    background-image: url(/assets/images/bg-texture.jpg);
    background-size: cover;

    // TODO: Remove when short homepage goes live.
    &.home-page {
        background: url(/assets/images/backgrounds/400-Home-hero.jpg) no-repeat top center fixed;
        @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
            background: url(/assets/images/backgrounds/400-Home-hero-2x.jpg) no-repeat top center fixed;
            background-size: rem(400px) rem(444px);
        }
        @include mq(400px) {
            background: url(/assets/images/backgrounds/740-Home-hero.jpg) no-repeat top center fixed;
            background-size: auto auto;
        }
        @include mq(tablet) {
            background: url(/assets/images/backgrounds/1920-Home-hero.jpg) no-repeat top center fixed;
            background-size: auto auto;
        }
    }

}

html.about-membership {
    background: url(/assets/images/backgrounds/740-About-hero.jpg) no-repeat top center fixed;
    @include mq(tablet) {
        background: url(/assets/images/backgrounds/1920-About-hero.jpg) no-repeat top center fixed;
    }
}

html.patron-page {
    background: url(/assets/images/backgrounds/740-Patrons-hero.jpg) no-repeat top center fixed;
    @include mq(tablet) {
        background: url(/assets/images/backgrounds/1920-Patrons-hero.jpg) no-repeat top center fixed;
    }
}

// TODO: Can magic numbers be removed?
// Magic numbers refer to footer height
body {
    min-height: 100%;
    margin-bottom: rem(280px);

    @include mq(mobileLandscape) {
        margin-bottom: rem(260px);
    }

    @include mq(tablet) {
        margin-bottom: rem(220px);
    }
}

// TODO: Extract max-widths out into variables
//       Extract constraining layout styles into l-constrained helper
//
// note: the max-widths set here
// are duplicated in mixins.scss
// for the side-margins function
// please duplicate your changes
// this alignment is too perfect
.page-container {

    @include clearfix;
    position: relative;

    margin: 0 auto;

    @include mq(tablet) {
        max-width: gs-span(12)+($gs-gutter*2);
    }

    @include mq(mem-full) {
        max-width: gs-span(14)+($gs-gutter*2);
    }
}

.page-content {
    @include clearfix;
    background-color: $c-background;
    padding: 0 rem($gs-gutter / 2);
    @include mq(mobileLandscape) {
        padding: 0 rem($gs-gutter);
    }
}
.page-content--padded {
    @include mq(tablet) {
        padding: 0 rem($gs-gutter * 4) rem($gs-gutter * 8);
    }
}

// TODO: Refactor to remove code below here
// ========================================
.l-row__item {
    padding-bottom: rem($gs-gutter * 2);
}

// Two thirds section
.section-two-thirds {
    width: 100%;
    margin: 0 auto;
    padding: 0 rem($gs-gutter / 2);
    @include fs-headline(2);
    position: relative;

    @include mq(desktop) {
        @include fs-headline(5);
    }

    .two-thirds {
        @include mq(tablet) {
            padding-left: $gs-gutter;
            width: rem(gs-span(8));
        }
        @include mq(mem-full) {
            width: rem(gs-span(8) + $gs-gutter);
        }
    }

    .one-third {
        margin-bottom: rem($gs-gutter);

        @include mq(tablet) {
            width: rem(gs-span(3));
            padding-left: rem($gs-gutter);
        }
        @include mq(mem-full) {
            width: rem(gs-span(4) + $gs-gutter);
        }
    }
}
